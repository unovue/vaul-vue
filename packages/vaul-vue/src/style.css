:where(:root) {
  --vaul-duration: 0.5s;
  --vaul-easing: cubic-bezier(0.32, 0.72, 0, 1);
}

:where([data-vaul-drawer-wrapper], [vaul-drawer-wrapper]:is([data-vaul-scale='true'])) {
  --vaul-wrapper-scale-px-unitless: -26;
  --vaul-wrapper-border-radius: 8px;
  --vaul-opened-percentage: calc(1 - var(--vaul-closed-percentage, 1));
  --vaul-wrapper-target-displacement: calc(var(--vaul-wrapper-scale-px-unitless) / -2 * 1px);
  --vaul-wrapper-displacement: calc(var(--vaul-wrapper-target-displacement) - var(--vaul-closed-percentage, 1) * var(--vaul-wrapper-target-displacement));
  --vaul-wrapper-target-size: calc(var(--vaul-window-opposite-size) + (var(--vaul-opened-percentage) * var(--vaul-wrapper-scale-px-unitless)));
  border-radius: calc(var(--vaul-opened-percentage) * var(--vaul-wrapper-border-radius));
  scale: calc(var(--vaul-wrapper-target-size) / var(--vaul-window-opposite-size));
  transition-property: scale, translate, border-radius;
  transition-duration: var(--vaul-duration);
  transition-timing-function: var(--vaul-easing);
}

/* REVIEW: Is this really necessary? Can we set it to clip instead? */
:where(body:has([data-vaul-drawer]) :is([data-vaul-drawer-wrapper], [vaul-drawer-wrapper])) {
  overflow: hidden;
}

body:has([data-vaul-drawer]:active) :is([data-vaul-drawer-wrapper], [vaul-drawer-wrapper]) {
  transition: none;
}

:where(body:has([data-vaul-drawer-direction='top']) :is([data-vaul-drawer-wrapper], [vaul-drawer-wrapper])) {
  transform-origin: bottom;
  translate: 0 calc(-1 * (env(safe-area-inset-bottom) + var(--vaul-wrapper-displacement))) 0;
}

:where(body:has([data-vaul-drawer-direction='bottom']) :is([data-vaul-drawer-wrapper], [vaul-drawer-wrapper])) {
  transform-origin: top;
  translate: 0 calc(1 * (env(safe-area-inset-top) + var(--vaul-wrapper-displacement))) 0;
}

:where(body:has([data-vaul-drawer-direction='left']) :is([data-vaul-drawer-wrapper], [vaul-drawer-wrapper])) {
  transform-origin: right;
  translate: calc(-1 * (env(safe-area-inset-right) + var(--vaul-wrapper-displacement))) 0 0;
}

:where(body:has([data-vaul-drawer-direction='right']) :is([data-vaul-drawer-wrapper], [vaul-drawer-wrapper])) {
  transform-origin: left;
  translate: calc(1 * (env(safe-area-inset-left) + var(--vaul-wrapper-displacement))) 0 0;
}

[data-vaul-drawer] {
  touch-action: none;
  will-change: transform;
  transition: transform var(--vaul-duration) var(--vaul-easing);
  animation-duration: var(--vaul-duration);
  animation-timing-function: var(--vaul-easing);
}

[data-vaul-drawer][data-vaul-snap-points='false'][data-vaul-drawer-direction='bottom'][data-state='open'] {
  animation-name: vaul-drawer-slide-from-bottom;
}
[data-vaul-drawer][data-vaul-snap-points='false'][data-vaul-drawer-direction='bottom'][data-state='closed'] {
  animation-name: vaul-drawer-slide-to-bottom;
}

[data-vaul-drawer][data-vaul-snap-points='false'][data-vaul-drawer-direction='top'][data-state='open'] {
  animation-name: vaul-drawer-slide-from-top;
}
[data-vaul-drawer][data-vaul-snap-points='false'][data-vaul-drawer-direction='top'][data-state='closed'] {
  animation-name: vaul-drawer-slide-to-top;
}

[data-vaul-drawer][data-vaul-snap-points='false'][data-vaul-drawer-direction='left'][data-state='open'] {
  animation-name: vaul-drawer-slide-from-left;
}
[data-vaul-drawer][data-vaul-snap-points='false'][data-vaul-drawer-direction='left'][data-state='closed'] {
  animation-name: vaul-drawer-slide-to-left;
}

[data-vaul-drawer][data-vaul-snap-points='false'][data-vaul-drawer-direction='right'][data-state='open'] {
  animation-name: vaul-drawer-slide-from-right;
}
[data-vaul-drawer][data-vaul-snap-points='false'][data-vaul-drawer-direction='right'][data-state='closed'] {
  animation-name: vaul-drawer-slide-to-right;
}

[data-vaul-drawer][data-vaul-snap-points='true'][data-vaul-drawer-direction='bottom'] {
  transform: translate3d(0, var(--vaul-initial-translate, 100%), 0);
}

[data-vaul-drawer][data-vaul-snap-points='true'][data-vaul-drawer-direction='top'] {
  transform: translate3d(0, calc(var(--vaul-initial-translate, 100%) * -1), 0);
}

[data-vaul-drawer][data-vaul-snap-points='true'][data-vaul-drawer-direction='left'] {
  transform: translate3d(calc(var(--vaul-initial-translate, 100%) * -1), 0, 0);
}

[data-vaul-drawer][data-vaul-snap-points='true'][data-vaul-drawer-direction='right'] {
  transform: translate3d(var(--vaul-initial-translate, 100%), 0, 0);
}

[data-vaul-drawer][data-vaul-delayed-snap-points='true'][data-vaul-drawer-direction='top'] {
  transform: translate3d(0, var(--vaul-snap-point-height, 0), 0);
}

[data-vaul-drawer][data-vaul-delayed-snap-points='true'][data-vaul-drawer-direction='bottom'] {
  transform: translate3d(0, var(--vaul-snap-point-height, 0), 0);
}

[data-vaul-drawer][data-vaul-delayed-snap-points='true'][data-vaul-drawer-direction='left'] {
  transform: translate3d(var(--vaul-snap-point-height, 0), 0, 0);
}

[data-vaul-drawer][data-vaul-delayed-snap-points='true'][data-vaul-drawer-direction='right'] {
  transform: translate3d(var(--vaul-snap-point-height, 0), 0, 0);
}

[data-vaul-overlay][data-vaul-snap-points='false'] {
  animation-duration: var(--vaul-duration);
  animation-timing-function: var(--vaul-easing);
}
[data-vaul-overlay][data-vaul-snap-points='false'][data-state='open'] {
  animation-name: vaul-overlay-fade-in;
}
[data-vaul-overlay][data-state='closed'] {
  animation-name: vaul-overlay-fade-out;
}

[data-vaul-animate='false'] {
  animation: none !important;
}

[data-vaul-overlay][data-vaul-snap-points='true'] {
  opacity: 0;
  transition: opacity var(--vaul-duration) var(--vaul-easing);
}

[data-vaul-overlay][data-vaul-snap-points='true'] {
  opacity: 1;
}

[data-vaul-drawer]:not([data-vaul-custom-container='true'])::after {
  content: '';
  position: absolute;
  background: inherit;
  background-color: inherit;
}

[data-vaul-drawer][data-vaul-drawer-direction='top']::after {
  top: initial;
  bottom: calc(100% - 1px);
  left: 0;
  right: 0;
  height: 200%;
}

[data-vaul-drawer][data-vaul-drawer-direction='bottom']::after {
  top: calc(100% - 1px);
  bottom: initial;
  left: 0;
  right: 0;
  height: 200%;
}

[data-vaul-drawer][data-vaul-drawer-direction='left']::after {
  left: initial;
  right: calc(100% - 1px);
  top: 0;
  bottom: 0;
  width: 200%;
}

[data-vaul-drawer][data-vaul-drawer-direction='right']::after {
  left: calc(100% - 1px);
  right: initial;
  top: 0;
  bottom: 0;
  width: 200%;
}

[data-vaul-overlay][data-vaul-snap-points='true']:not([data-vaul-snap-points-overlay='true']):not([data-state='closed']) {
  opacity: 0;
}

[data-vaul-overlay][data-vaul-snap-points-overlay='true'] {
  opacity: 1;
}

[data-vaul-handle] {
  display: block;
  position: relative;
  opacity: 0.7;
  background: #e2e2e4;
  margin-left: auto;
  margin-right: auto;
  height: 5px;
  width: 32px;
  border-radius: 1rem;
  touch-action: pan-y;
}

[data-vaul-handle]:hover,
[data-vaul-handle]:active {
  opacity: 1;
}

[data-vaul-handle-hitarea] {
  position: absolute;
  left: 50%;
  top: 50%;
  transform: translate(-50%, -50%);
  width: max(100%, 2.75rem); /* 44px */
  height: max(100%, 2.75rem); /* 44px */
  touch-action: inherit;
}

@media (hover: hover) and (pointer: fine) {
  [data-vaul-drawer] {
    user-select: none;
  }
}

@keyframes vaul-overlay-fade-in {
  from {
    opacity: 0;
  }
  to {
    opacity: 1;
  }
}

@keyframes vaul-overlay-fade-out {
  to {
    opacity: 0;
  }
}

@keyframes vaul-drawer-slide-from-bottom {
  from {
    transform: translate3d(0, var(--vaul-initial-translate, 100%), 0);
  }
  to {
    transform: translate3d(0, 0, 0);
  }
}

@keyframes vaul-drawer-slide-to-bottom {
  to {
    transform: translate3d(0, var(--vaul-initial-translate, 100%), 0);
  }
}

@keyframes vaul-drawer-slide-from-top {
  from {
    transform: translate3d(0, calc(var(--vaul-initial-translate, 100%) * -1), 0);
  }
  to {
    transform: translate3d(0, 0, 0);
  }
}

@keyframes vaul-drawer-slide-to-top {
  to {
    transform: translate3d(0, calc(var(--vaul-initial-translate, 100%) * -1), 0);
  }
}

@keyframes vaul-drawer-slide-from-left {
  from {
    transform: translate3d(calc(var(--vaul-initial-translate, 100%) * -1), 0, 0);
  }
  to {
    transform: translate3d(0, 0, 0);
  }
}

@keyframes vaul-drawer-slide-to-left {
  to {
    transform: translate3d(calc(var(--vaul-initial-translate, 100%) * -1), 0, 0);
  }
}

@keyframes vaul-drawer-slide-from-right {
  from {
    transform: translate3d(var(--vaul-initial-translate, 100%), 0, 0);
  }
  to {
    transform: translate3d(0, 0, 0);
  }
}

@keyframes vaul-drawer-slide-to-right {
  to {
    transform: translate3d(var(--vaul-initial-translate, 100%), 0, 0);
  }
}
